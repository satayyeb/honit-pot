name: Build Python Binaries

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build binary
        run: pyinstaller pot.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: dist/pot

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build binary
        run: pyinstaller pot.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: dist/pot.exe

  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build binary
        run: pyinstaller pot.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-binary
          path: dist/pot

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Linux binary artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-binary
          path: ./bin

      - name: Log in to the Registry
        run: docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push docker image
        run: |
          cp ./bin/pot ./pot-exe
          export TAG=${GITHUB_SHA::8}
          docker build . -t ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${TAG}
          docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${TAG}

  deploy:
    runs-on: ubuntu-latest
    container: curlimages/curl:latest
    needs: build-docker
    steps:
      - name: Deploy on Kubit
        run: |
          export TAG=${GITHUB_SHA::8}
          curl -X POST \
          -F DOCKER_TAG=${TAG} \
          -H "Authorization: Bearer ${{ secrets.KUBIT_WEBHOOK_TOKEN }}" \
          "${{ secrets.KUBIT_WEBHOOK_URL }}"
